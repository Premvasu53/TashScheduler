{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskManagementService {\n  constructor(hc) {\n    this.hc = hc;\n    this.url = \"http://localhost:3000/tasks\";\n  }\n  addTask(taskdetails) {\n    return this.hc.post(this.url, JSON.stringify(taskdetails));\n  }\n  viewAllTask() {\n    return this.hc.get(this.url);\n  }\n  deleteTask(id) {\n    return this.hc.delete(this.url + \"/\" + id);\n  }\n  taskselectById(id) {\n    return this.hc.get(this.url + \"/\" + id);\n  }\n  taskupdate(task) {\n    return this.hc.put(this.url + \"/\" + task.id, JSON.stringify(task));\n  }\n  static #_ = this.ɵfac = function TaskManagementService_Factory(t) {\n    return new (t || TaskManagementService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskManagementService,\n    factory: TaskManagementService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TaskManagementService","constructor","hc","url","addTask","taskdetails","post","JSON","stringify","viewAllTask","get","deleteTask","id","delete","taskselectById","taskupdate","task","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\premv\\Desktop\\Angular_Projects\\TaskScheduler\\src\\app\\task-management.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Template } from './template';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskManagementService {\n  constructor(public hc:HttpClient) {}\n  url=\"http://localhost:3000/tasks\";\n  addTask(taskdetails:Template){\n    return this.hc.post(this.url,JSON.stringify(taskdetails));\n  }\n  viewAllTask(){\n    return this.hc.get<Template[]>(this.url);\n  }\n  deleteTask(id:any){\n    return this.hc.delete(this.url+\"/\"+id);\n  }\n  taskselectById(id:any){\n    return this.hc.get<Template>(this.url+\"/\"+id);\n  }\n  taskupdate(task:Template){\n    return this.hc.put(this.url+\"/\"+task.id,JSON.stringify(task));\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,qBAAqB;EAChCC,YAAmBC,EAAa;IAAb,KAAAA,EAAE,GAAFA,EAAE;IACrB,KAAAC,GAAG,GAAC,6BAA6B;EADE;EAEnCC,OAAOA,CAACC,WAAoB;IAC1B,OAAO,IAAI,CAACH,EAAE,CAACI,IAAI,CAAC,IAAI,CAACH,GAAG,EAACI,IAAI,CAACC,SAAS,CAACH,WAAW,CAAC,CAAC;EAC3D;EACAI,WAAWA,CAAA;IACT,OAAO,IAAI,CAACP,EAAE,CAACQ,GAAG,CAAa,IAAI,CAACP,GAAG,CAAC;EAC1C;EACAQ,UAAUA,CAACC,EAAM;IACf,OAAO,IAAI,CAACV,EAAE,CAACW,MAAM,CAAC,IAAI,CAACV,GAAG,GAAC,GAAG,GAACS,EAAE,CAAC;EACxC;EACAE,cAAcA,CAACF,EAAM;IACnB,OAAO,IAAI,CAACV,EAAE,CAACQ,GAAG,CAAW,IAAI,CAACP,GAAG,GAAC,GAAG,GAACS,EAAE,CAAC;EAC/C;EACAG,UAAUA,CAACC,IAAa;IACtB,OAAO,IAAI,CAACd,EAAE,CAACe,GAAG,CAAC,IAAI,CAACd,GAAG,GAAC,GAAG,GAACa,IAAI,CAACJ,EAAE,EAACL,IAAI,CAACC,SAAS,CAACQ,IAAI,CAAC,CAAC;EAC/D;EAAC,QAAAE,CAAA,G;qBAjBUlB,qBAAqB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBvB,qBAAqB;IAAAwB,OAAA,EAArBxB,qBAAqB,CAAAyB,IAAA;IAAAC,UAAA,EAFpB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}